// 本ファイルはコンバータで出力しています。

#ifndef	__COUNTRY_PLACE_SORT_H__
#define	__COUNTRY_PLACE_SORT_H__

#include "msgdata/msg_wifi_place_msg_ARG.h"
#include "msgdata/msg_wifi_place_msg_AUS.h"
#include "msgdata/msg_wifi_place_msg_BRA.h"
#include "msgdata/msg_wifi_place_msg_CAN.h"
#include "msgdata/msg_wifi_place_msg_CHN.h"
#include "msgdata/msg_wifi_place_msg_DEU.h"
#include "msgdata/msg_wifi_place_msg_ESP.h"
#include "msgdata/msg_wifi_place_msg_FIN.h"
#include "msgdata/msg_wifi_place_msg_FRA.h"
#include "msgdata/msg_wifi_place_msg_GBR.h"
#include "msgdata/msg_wifi_place_msg_IND.h"
#include "msgdata/msg_wifi_place_msg_ITA.h"
#include "msgdata/msg_wifi_place_msg_JPN.h"
#include "msgdata/msg_wifi_place_msg_NOR.h"
#include "msgdata/msg_wifi_place_msg_POL.h"
#include "msgdata/msg_wifi_place_msg_RUS.h"
#include "msgdata/msg_wifi_place_msg_SWE.h"
#include "msgdata/msg_wifi_place_msg_USA.h"
#include "msgdata/msg_wifi_place_msg_world.h"

#define	PLACE_NAME_SORT_NUM_0	(24)		// ARGの実際の個数。

// ARG
static const u8 PlaceNameSort0[] = {
	ARG01,
	ARG03,
	ARG04,
	ARG05,
	ARG02,
	ARG06,
	ARG07,
	ARG08,
	ARG09,
	ARG10,
	ARG11,
	ARG12,
	ARG13,
	ARG14,
	ARG15,
	ARG16,
	ARG17,
	ARG18,
	ARG19,
	ARG20,
	ARG21,
	ARG22,
	ARG23,
	ARG24,
};

#define	PLACE_NAME_SORT_NUM_1	(7)		// AUSの実際の個数。

// AUS
static const u8 PlaceNameSort1[] = {
	AUS01,
	AUS02,
	AUS03,
	AUS04,
	AUS05,
	AUS06,
	AUS07,
};

#define	PLACE_NAME_SORT_NUM_2	(27)		// BRAの実際の個数。

// BRA
static const u8 PlaceNameSort2[] = {
	BRA01,
	BRA03,
	BRA04,
	BRA05,
	BRA06,
	BRA07,
	BRA08,
	BRA09,
	BRA10,
	BRA11,
	BRA12,
	BRA13,
	BRA14,
	BRA15,
	BRA16,
	BRA17,
	BRA18,
	BRA19,
	BRA22,
	BRA21,
	BRA20,
	BRA02,
	BRA23,
	BRA24,
	BRA25,
	BRA26,
	BRA27,
};

#define	PLACE_NAME_SORT_NUM_3	(13)		// CANの実際の個数。

// CAN
static const u8 PlaceNameSort3[] = {
	CAN01,
	CAN02,
	CAN03,
	CAN04,
	CAN05,
	CAN06,
	CAN07,
	CAN08,
	CAN09,
	CAN10,
	CAN11,
	CAN12,
	CAN13,
};

#define	PLACE_NAME_SORT_NUM_4	(31)		// CHNの実際の個数。

// CHN
static const u8 PlaceNameSort4[] = {
	CHN01,
	CHN02,
	CHN03,
	CHN04,
	CHN05,
	CHN06,
	CHN07,
	CHN08,
	CHN09,
	CHN10,
	CHN11,
	CHN12,
	CHN13,
	CHN14,
	CHN15,
	CHN16,
	CHN17,
	CHN18,
	CHN19,
	CHN20,
	CHN21,
	CHN22,
	CHN23,
	CHN24,
	CHN25,
	CHN26,
	CHN27,
	CHN28,
	CHN29,
	CHN30,
	CHN31,
};

#define	PLACE_NAME_SORT_NUM_5	(16)		// DEUの実際の個数。

// DEU
static const u8 PlaceNameSort5[] = {
	DEU01,
	DEU02,
	DEU03,
	DEU04,
	DEU05,
	DEU16,
	DEU06,
	DEU07,
	DEU08,
	DEU09,
	DEU10,
	DEU11,
	DEU12,
	DEU13,
	DEU14,
	DEU15,
};

#define	PLACE_NAME_SORT_NUM_6	(17)		// ESPの実際の個数。

// ESP
static const u8 PlaceNameSort6[] = {
	ESP01,
	ESP02,
	ESP03,
	ESP07,
	ESP09,
	ESP08,
	ESP10,
	ESP17,
	ESP11,
	ESP12,
	ESP04,
	ESP06,
	ESP16,
	ESP13,
	ESP14,
	ESP15,
	ESP05,
};

#define	PLACE_NAME_SORT_NUM_7	(6)		// FINの実際の個数。

// FIN
static const u8 PlaceNameSort7[] = {
	FIN01,
	FIN03,
	FIN02,
	FIN05,
	FIN04,
	FIN06,
};

#define	PLACE_NAME_SORT_NUM_8	(22)		// FRAの実際の個数。

// FRA
static const u8 PlaceNameSort8[] = {
	FRA02,
	FRA01,
	FRA04,
	FRA12,
	FRA13,
	FRA07,
	FRA06,
	FRA05,
	FRA11,
	FRA03,
	FRA18,
	FRA19,
	FRA22,
	FRA21,
	FRA17,
	FRA08,
	FRA09,
	FRA15,
	FRA10,
	FRA16,
	FRA14,
	FRA20,
};

#define	PLACE_NAME_SORT_NUM_9	(12)		// GBRの実際の個数。

// GBR
static const u8 PlaceNameSort9[] = {
	GBR02,
	GBR01,
	GBR03,
	GBR04,
	GBR05,
	GBR06,
	GBR07,
	GBR08,
	GBR09,
	GBR10,
	GBR11,
	GBR12,
};

#define	PLACE_NAME_SORT_NUM_10	(35)		// INDの実際の個数。

// IND
static const u8 PlaceNameSort10[] = {
	IND01,
	IND02,
	IND03,
	IND04,
	IND05,
	IND06,
	IND07,
	IND08,
	IND09,
	IND10,
	IND11,
	IND12,
	IND13,
	IND14,
	IND15,
	IND16,
	IND17,
	IND18,
	IND19,
	IND20,
	IND21,
	IND24,
	IND22,
	IND23,
	IND25,
	IND26,
	IND27,
	IND28,
	IND29,
	IND30,
	IND31,
	IND32,
	IND33,
	IND34,
	IND35,
};

#define	PLACE_NAME_SORT_NUM_11	(20)		// ITAの実際の個数。

// ITA
static const u8 PlaceNameSort11[] = {
	ITA01,
	ITA02,
	ITA03,
	ITA04,
	ITA05,
	ITA06,
	ITA07,
	ITA08,
	ITA09,
	ITA10,
	ITA11,
	ITA12,
	ITA13,
	ITA14,
	ITA15,
	ITA16,
	ITA17,
	ITA18,
	ITA19,
	ITA20,
};

#define	PLACE_NAME_SORT_NUM_12	(50)		// JPNの実際の個数。

// JPN
static const u8 PlaceNameSort12[] = {
	JPN26,
	JPN08,
	JPN05,
	JPN15,
	JPN41,
	JPN21,
	JPN43,
	JPN10,
	JPN24,
	JPN13,
	JPN37,
	JPN02,
	JPN04,
	JPN01,
	JPN03,
	JPN31,
	JPN11,
	JPN20,
	JPN06,
	JPN40,
	JPN49,
	JPN17,
	JPN42,
	JPN46,
	JPN29,
	JPN27,
	JPN07,
	JPN48,
	JPN23,
	JPN45,
	JPN32,
	JPN18,
	JPN47,
	JPN36,
	JPN50,
	JPN30,
	JPN44,
	JPN14,
	JPN28,
	JPN35,
	JPN25,
	JPN12,
	JPN39,
	JPN16,
	JPN34,
	JPN19,
	JPN33,
	JPN09,
	JPN38,
	JPN22,
};

#define	PLACE_NAME_SORT_NUM_13	(20)		// NORの実際の個数。

// NOR
static const u8 PlaceNameSort13[] = {
	NOR01,
	NOR02,
	NOR03,
	NOR04,
	NOR05,
	NOR06,
	NOR07,
	NOR08,
	NOR10,
	NOR09,
	NOR11,
	NOR12,
	NOR20,
	NOR13,
	NOR14,
	NOR15,
	NOR16,
	NOR17,
	NOR18,
	NOR19,
};

#define	PLACE_NAME_SORT_NUM_14	(16)		// POLの実際の個数。

// POL
static const u8 PlaceNameSort14[] = {
	POL01,
	POL02,
	POL05,
	POL03,
	POL04,
	POL06,
	POL07,
	POL08,
	POL09,
	POL10,
	POL11,
	POL12,
	POL13,
	POL14,
	POL15,
	POL16,
};

#define	PLACE_NAME_SORT_NUM_15	(7)		// RUSの実際の個数。

// RUS
static const u8 PlaceNameSort15[] = {
	RUS01,
	RUS02,
	RUS03,
	RUS05,
	RUS06,
	RUS07,
	RUS04,
};

#define	PLACE_NAME_SORT_NUM_16	(24)		// SWEの実際の個数。

// SWE
static const u8 PlaceNameSort16[] = {
	SWE01,
	SWE02,
	SWE03,
	SWE04,
	SWE05,
	SWE06,
	SWE07,
	SWE08,
	SWE09,
	SWE10,
	SWE13,
	SWE14,
	SWE15,
	SWE11,
	SWE16,
	SWE17,
	SWE18,
	SWE19,
	SWE20,
	SWE12,
	SWE21,
	SWE22,
	SWE23,
	SWE24,
};

#define	PLACE_NAME_SORT_NUM_17	(51)		// USAの実際の個数。

// USA
static const u8 PlaceNameSort17[] = {
	USA01,
	USA02,
	USA03,
	USA04,
	USA05,
	USA06,
	USA07,
	USA08,
	USA09,
	USA10,
	USA11,
	USA12,
	USA13,
	USA14,
	USA15,
	USA16,
	USA17,
	USA18,
	USA19,
	USA20,
	USA21,
	USA22,
	USA23,
	USA24,
	USA25,
	USA26,
	USA27,
	USA28,
	USA29,
	USA30,
	USA31,
	USA32,
	USA33,
	USA34,
	USA35,
	USA36,
	USA37,
	USA38,
	USA39,
	USA40,
	USA41,
	USA42,
	USA43,
	USA44,
	USA45,
	USA46,
	USA47,
	USA48,
	USA49,
	USA50,
	USA51,
};

#define	COUNTRY_NAME_SORT_NUM	(130)		// 国名の実際の個数。

static const u8 CountryNameSort[] = {
	country001,
	country002,
	country003,
	country006,
	country008,
	country009,
	country012,
	country013,
	country015,
	country016,
	country017,
	country018,
	country020,
	country021,
	country022,
	country023,
	country025,
	country027,
	country028,
	country029,
	country031,
	country033,
	country034,
	country035,
	country036,
	country040,
	country042,
	country043,
	country045,
	country048,
	country049,
	country050,
	country052,
	country054,
	country055,
	country056,
	country058,
	country059,
	country060,
	country061,
	country062,
	country069,
	country070,
	country071,
	country072,
	country074,
	country077,
	country078,
	country079,
	country080,
	country081,
	country082,
	country083,
	country085,
	country086,
	country088,
	country089,
	country090,
	country091,
	country092,
	country093,
	country094,
	country095,
	country097,
	country098,
	country100,
	country101,
	country102,
	country103,
	country104,
	country107,
	country111,
	country115,
	country117,
	country118,
	country121,
	country122,
	country126,
	country129,
	country131,
	country133,
	country135,
	country140,
	country142,
	country146,
	country148,
	country149,
	country150,
	country151,
	country152,
	country156,
	country157,
	country158,
	country160,
	country161,
	country163,
	country164,
	country166,
	country167,
	country110,
	country171,
	country172,
	country179,
	country183,
	country186,
	country187,
	country188,
	country189,
	country192,
	country193,
	country194,
	country196,
	country198,
	country199,
	country200,
	country202,
	country205,
	country207,
	country211,
	country212,
	country216,
	country218,
	country219,
	country204,
	country221,
	country220,
	country222,
	country224,
	country226,
	country227,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
	country000,
};

#endif
