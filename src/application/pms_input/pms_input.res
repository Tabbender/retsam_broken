#ifdef __PMS_INPUT_RES__

// MatchComment: port from DP US (size of PMS_InitialTable in DP US is the same in Plat US)

#define PMS_WORDID_END	(0xffff)
#define PMS_WORDID_DUP	(0xfffe)

#define PMS_WORDNUM_MAX	(1495)	// 総単語数

//==========================================================
// カテゴリごとの単語IDテーブル
//==========================================================

// ポケモン
static const u16 PMS_CategoryTable_01[] = {
	 460,
	  63,
	 359,
	 142,
	 306,
	 190,
	  65,
	 334,
	 424,
	 181,
	 347,
	  24,
	  59,
	 493,
	 168,
	 348,
	 304,
	 144,
	 482,
	 184,
	 298,
	 371,
	 343,
	 354,
	 339,
	 411,
	 153,
	 267,
	  15,
	 374,
	 182,
	  69,
	 400,
	 399,
	   9,
	 257,
	 242,
	 438,
	 286,
	 437,
	 436,
	 406,
	 418,
	   1,
	 427,
	 412,
	  12,
	 331,
	 332,
	 323,
	 455,
	 318,
	 268,
	 351,
	  10,
	 251,
	 113,
	   6,
	   4,
	   5,
	 441,
	 421,
	 420,
	 152,
	 390,
	 358,
	 170,
	 433,
	 366,
	 344,
	  36,
	  35,
	 173,
	  91,
	 415,
	 256,
	 341,
	 222,
	 346,
	 408,
	 342,
	 488,
	 453,
	 169,
	 159,
	 104,
	 155,
	 491,
	 301,
	 225,
	 386,
	  87,
	 483,
	  50,
	 132,
	  85,
	  84,
	 232,
	 148,
	 149,
	 452,
	 147,
	 426,
	 425,
	  96,
	  51,
	 206,
	 356,
	 477,
	 355,
	 269,
	 133,
	  23,
	 125,
	 466,
	 309,
	 101,
	 239,
	 395,
	 244,
	 196,
	 102,
	 103,
	 295,
	  83,
	  22,
	 349,
	 160,
	 456,
	 180,
	 136,
	 419,
	 330,
	 205,
	 478,
	 162,
	 444,
	 475,
	 445,
	 282,
	  92,
	 423,
	  94,
	  74,
	 443,
	 203,
	 487,
	 471,
	 362,
	 431,
	 207,
	 472,
	  44,
	  42,
	 118,
	  55,
	  76,
	 368,
	 210,
	  75,
	  88,
	 388,
	 383,
	 253,
	  58,
	 326,
	 316,
	 130,
	 440,
	 297,
	  93,
	 485,
	 214,
	 449,
	 450,
	 107,
	 106,
	 237,
	 250,
	 430,
	 163,
	 187,
	 116,
	 229,
	 228,
	 367,
	  97,
	 174,
	 314,
	 392,
	   2,
	  39,
	 385,
	 135,
	 189,
	 124,
	 140,
	 141,
	  64,
	  14,
	 115,
	 352,
	 230,
	  99,
	 281,
	 109,
	  98,
	 401,
	 402,
	 382,
	 305,
	 171,
	 131,
	 246,
	 380,
	 381,
	 470,
	 166,
	 165,
	 463,
	 108,
	 345,
	 264,
	 271,
	 428,
	 270,
	 294,
	 448,
	 272,
	 249,
	 457,
	 337,
	 370,
	 404,
	 405,
	PMS_WORDID_END
};

#define  PMS_Category_01_MaxNum	(235)

// ポケモン２
static const u16 PMS_CategoryTable_02[] = {
	  68,
	  67,
	  66,
	 240,
	 219,
	 129,
	 126,
	 467,
	  81,
	  82,
	 462,
	 296,
	 473,
	 490,
	 310,
	  56,
	 226,
	 458,
	 179,
	 183,
	 105,
	 259,
	 284,
	 303,
	 308,
	 307,
	 154,
	  52,
	 481,
	 376,
	 375,
	  11,
	 151,
	 150,
	 262,
	 350,
	 241,
	 439,
	 312,
	 200,
	 429,
	 146,
	 391,
	 414,
	 122,
	 258,
	  89,
	 446,
	 198,
	 177,
	  34,
	  31,
	  29,
	  32,
	  30,
	  33,
	 290,
	  38,
	 291,
	 164,
	 299,
	 322,
	 274,
	 224,
	  43,
	 138,
	 139,
	  95,
	 417,
	 484,
	  46,
	  47,
	 279,
	  53,
	 231,
	 489,
	 172,
	  18,
	  17,
	  16,
	  25,
	 221,
	 204,
	 127,
	 393,
	 311,
	 186,
	  60,
	  61,
	  62,
	  77,
	 261,
	 137,
	 474,
	 233,
	  57,
	 394,
	 476,
	  54,
	 247,
	 432,
	 195,
	 156,
	 211,
	  26,
	 243,
	 280,
	 409,
	  78,
	  20,
	  19,
	 384,
	 378,
	 486,
	 377,
	 379,
	 369,
	 223,
	 112,
	 111,
	 464,
	 447,
	 315,
	 407,
	 479,
	 302,
	 373,
	  27,
	  28,
	 254,
	 212,
	 123,
	 117,
	 119,
	 364,
	 273,
	  86,
	 161,
	 336,
	 319,
	 492,
	 292,
	 372,
	  90,
	 422,
	 410,
	 275,
	 403,
	 285,
	 213,
	 353,
	 266,
	 227,
	 188,
	 300,
	 451,
	 435,
	 289,
	 287,
	  80,
	 199,
	  79,
	 218,
	 235,
	 238,
	 215,
	 143,
	 361,
	 459,
	 209,
	 338,
	  21,
	 363,
	 167,
	 327,
	 442,
	 325,
	   7,
	 234,
	 398,
	 397,
	 396,
	 121,
	 120,
	 208,
	 434,
	 185,
	 245,
	 192,
	 191,
	 283,
	 333,
	 317,
	 260,
	 277,
	 220,
	 276,
	 114,
	 465,
	 128,
	 216,
	  72,
	  73,
	 468,
	 175,
	 176,
	 255,
	 324,
	 389,
	 158,
	 454,
	 328,
	 252,
	 357,
	 387,
	 157,
	 248,
	 236,
	 197,
	 201,
	 217,
	 480,
	 134,
	  49,
	  48,
	   3,
	 416,
	 329,
	  71,
	 288,
	  45,
	 313,
	 100,
	  37,
	 320,
	 321,
	 365,
	   8,
	 461,
	  13,
	  70,
	 110,
	 340,
	 293,
	  40,
	 278,
	 202,
	 194,
	 413,
	 265,
	 360,
	 178,
	 193,
	 469,
	 335,
	 145,
	 263,
	  41,
	PMS_WORDID_END
};

#define  PMS_Category_02_MaxNum	(258)

// わざ
static const u16 PMS_CategoryTable_03[] = {
	 567,
	 547,
	 647,
	 863,
	 828,
	 673,
	 593,
	 810,
	 899,
	 629,
	 742,
	 949,
	 888,
	 897,
	 788,
	 808,
	 770,
	 868,
	 806,
	 950,
	 709,
	 892,
	 558,
	 915,
	 636,
	 608,
	 722,
	 747,
	 683,
	 613,
	 516,
	 540,
	 803,
	 795,
	 555,
	 831,
	 530,
	 621,
	 694,
	 651,
	 836,
	 909,
	 776,
	 858,
	 641,
	 557,
	 946,
	 901,
	 835,
	 914,
	 827,
	 843,
	 789,
	 941,
	 764,
	 947,
	 700,
	 944,
	 624,
	 866,
	 500,
	 605,
	 589,
	 628,
	 656,
	 672,
	 879,
	 818,
	 674,
	 564,
	 839,
	 648,
	 734,
	 936,
	 738,
	 802,
	 958,
	 670,
	 511,
	 895,
	 951,
	 607,
	 928,
	 690,
	 693,
	 587,
	 546,
	 931,
	 787,
	 642,
	 849,
	 954,
	 520,
	 600,
	 534,
	 499,
	 930,
	 833,
	 845,
	 902,
	 578,
	 903,
	 721,
	 905,
	 634,
	 561,
	 719,
	 910,
	 585,
	 617,
	 869,
	 548,
	 723,
	 779,
	 699,
	 908,
	 780,
	 649,
	 822,
	 741,
	 759,
	 681,
	 748,
	 809,
	 702,
	 793,
	 860,
	 622,
	 920,
	 503,
	 579,
	 586,
	 671,
	 668,
	 549,
	 890,
	 644,
	 926,
	 756,
	 870,
	 515,
	 907,
	 612,
	 760,
	 762,
	 891,
	 689,
	 834,
	 714,
	 527,
	 706,
	 650,
	 744,
	 876,
	 698,
	 912,
	 633,
	 943,
	 816,
	 852,
	 541,
	 570,
	 784,
	 881,
	 508,
	 937,
	 512,
	 856,
	 754,
	 855,
	 602,
	 610,
	 953,
	 525,
	 711,
	 873,
	 952,
	 857,
	 887,
	 753,
	 766,
	 632,
	 733,
	 526,
	 528,
	 832,
	 804,
	 552,
	 559,
	 654,
	 800,
	 591,
	 797,
	 554,
	 919,
	 504,
	 916,
	 829,
	 692,
	 782,
	 771,
	 830,
	 938,
	 727,
	 522,
	 498,
	 630,
	 778,
	 883,
	 932,
	 844,
	 933,
	 637,
	 569,
	 539,
	 618,
	 609,
	 695,
	 638,
	 563,
	 877,
	 957,
	 791,
	PMS_WORDID_END
};

#define  PMS_Category_03_MaxNum	(223)

// わざ２
static const u16 PMS_CategoryTable_04[] = {
	 679,
	 773,
	 841,
	 959,
	 939,
	 889,
	 718,
	 878,
	 708,
	 592,
	 568,
	 521,
	 501,
	 720,
	 758,
	 864,
	 728,
	 815,
	 805,
	 614,
	 704,
	 598,
	 666,
	 603,
	 853,
	 739,
	 615,
	 925,
	 550,
	 792,
	 732,
	 730,
	 922,
	 837,
	 796,
	 685,
	 826,
	 913,
	 859,
	 763,
	 798,
	 597,
	 896,
	 667,
	 686,
	 812,
	 962,
	 696,
	 811,
	 716,
	 502,
	 867,
	 560,
	 691,
	 576,
	 538,
	 861,
	 801,
	 635,
	 894,
	 536,
	 838,
	 573,
	 497,
	 677,
	 904,
	 880,
	 875,
	 934,
	 713,
	 678,
	 556,
	 740,
	 590,
	 850,
	 923,
	 871,
	 645,
	 882,
	 724,
	 594,
	 595,
	 736,
	 725,
	 571,
	 509,
	 601,
	 774,
	 611,
	 783,
	 652,
	 712,
	 775,
	 675,
	 542,
	 955,
	 846,
	 927,
	 893,
	 653,
	 745,
	 584,
	 813,
	 935,
	 768,
	 523,
	 701,
	 851,
	 717,
	 715,
	 824,
	 524,
	 697,
	 680,
	 506,
	 599,
	 786,
	 898,
	 565,
	 616,
	 743,
	 917,
	 963,
	 821,
	 921,
	 655,
	 825,
	 847,
	 820,
	 814,
	 543,
	 662,
	 781,
	 626,
	 639,
	 823,
	 799,
	 517,
	 659,
	 575,
	 710,
	 620,
	 684,
	 761,
	 619,
	 604,
	 785,
	 669,
	 631,
	 572,
	 545,
	 956,
	 705,
	 665,
	 627,
	 687,
	 751,
	 676,
	 646,
	 643,
	 942,
	 707,
	 750,
	 519,
	 940,
	 566,
	 577,
	 661,
	 574,
	 562,
	 660,
	 885,
	 737,
	 658,
	 772,
	 544,
	 553,
	 703,
	 752,
	 682,
	 726,
	 625,
	 911,
	 510,
	 731,
	 529,
	 790,
	 535,
	 862,
	 532,
	 765,
	 794,
	 596,
	 664,
	 533,
	 583,
	 918,
	 582,
	 581,
	 505,
	 580,
	 817,
	 755,
	 588,
	 886,
	 640,
	 657,
	 767,
	 929,
	 663,
	 872,
	 537,
	 735,
	 865,
	 749,
	 906,
	 507,
	 518,
	 729,
	 840,
	 854,
	 551,
	 848,
	 842,
	 819,
	 623,
	 807,
	 746,
	 514,
	 757,
	 513,
	 769,
	 606,
	 948,
	 884,
	 531,
	 874,
	 900,
	 777,
	 688,
	 924,
	PMS_WORDID_END
};

#define  PMS_Category_04_MaxNum	(241)

// ステータス
static const u16 PMS_CategoryTable_05[] = {
	1073,
	1088,
	1058,
	1065,
	1089,
	1053,
	 986,
	1048,
	 970,
	1016,
	1011,
	 995,
	 998,
	 996,
	1038,
	 988,
	 981,
	1070,
	 980,
	 984,
	1052,
	1069,
	1030,
	1009,
	 977,
	 965,
	1093,
	 974,
	1031,
	1000,
	1104,
	 966,
	1041,
	1090,
	1101,
	 971,
	1064,
	 976,
	 968,
	1044,
	1067,
	1100,
	1019,
	1037,
	1075,
	1034,
	 979,
	1097,
	1017,
	 999,
	1021,
	 997,
	1004,
	1071,
	1033,
	1085,
	1084,
	1008,
	1013,
	 989,
	1046,
	1080,
	1022,
	1024,
	1045,
	1040,
	1086,
	1060,
	1012,
	1081,
	 964,
	1078,
	 994,
	1047,
	1002,
	1035,
	1039,
	 967,
	1072,
	1020,
	1028,
	 978,
	1056,
	1077,
	1026,
	1102,
	1061,
	 969,
	1051,
	1006,
	1032,
	1027,
	 990,
	1095,
	1014,
	1005,
	1043,
	1057,
	1001,
	1068,
	1074,
	1094,
	1079,
	1063,
	1099,
	1076,
	1098,
	1025,
	 985,
	1082,
	 991,
	1062,
	 972,
	 983,
	1042,
	1096,
	 987,
	1003,
	1087,
	1050,
	1015,
	1010,
	1059,
	1083,
	1029,
	1092,
	1049,
	1018,
	1036,
	1091,
	1066,
	1054,
	 992,
	 975,
	 993,
	1023,
	1055,
	1007,
	PMS_WORDID_END
};

#define  PMS_Category_05_MaxNum	(138)

// トレーナー
static const u16 PMS_CategoryTable_06[] = {
	1112,
	1114,
	1131,
	1125,
	1113,
	1116,
	1139,
	1141,
	1132,
	1123,
	1128,
	1129,
	1138,
	1130,
	1136,
	1119,
	1106,
	1142,
	1110,
	1107,
	1137,
	1134,
	1124,
	1108,
	1133,
	1121,
	1135,
	1111,
	1118,
	1126,
	1115,
	1127,
	1117,
	1143,
	1122,
	1120,
	1140,
	1109,
	PMS_WORDID_END
};

#define  PMS_Category_06_MaxNum	(38)

// ひと
static const u16 PMS_CategoryTable_07[] = {
	1152,
	1173,
	1156,
	1181,
	1151,
	1153,
	1177,
	1162,
	1150,
	1172,
	1161,
	1160,
	1148,
	1155,
	1163,
	1164,
	1180,
	1167,
	1159,
	1147,
	1168,
	1169,
	1170,
	1158,
	1144,
	1157,
	1174,
	1178,
	1166,
	1154,
	1149,
	1171,
	1146,
	PMS_WORDID_END
};

#define  PMS_Category_07_MaxNum	(33)

// あいさつ
static const u16 PMS_CategoryTable_08[] = {
	1288,
	1189,
	1212,
	1190,
	1258,
	1271,
	1244,
	1184,
	1286,
	1214,
	1270,
	1255,
	1246,
	1185,
	1210,
	1208,
	1224,
	1213,
	1241,
	1231,
	1226,
	1227,
	1245,
	1234,
	1220,
	1228,
	1257,
	1186,
	1265,
	1219,
	1266,
	1215,
	1183,
	1274,
	1196,
	1198,
	1216,
	1233,
	1247,
	1252,
	1275,
	1259,
	1203,
	1267,
	1187,
	1249,
	1263,
	1232,
	1236,
	1182,
	1282,
	1202,
	1197,
	1261,
	1256,
	1273,
	1272,
	1260,
	1250,
	1193,
	1276,
	1194,
	1223,
	1188,
	1218,
	1269,
	1217,
	1211,
	1242,
	1221,
	1238,
	1281,
	1240,
	1251,
	1207,
	1262,
	1239,
	1230,
	1235,
	1192,
	1268,
	1243,
	1229,
	1209,
	1201,
	1287,
	1284,
	1237,
	1279,
	1222,
	1248,
	1204,
	1206,
	1205,
	1225,
	1277,
	1283,
	1199,
	1254,
	1253,
	1195,
	1278,
	PMS_WORDID_END
};

#define  PMS_Category_08_MaxNum	(102)

// せいかつ
static const u16 PMS_CategoryTable_09[] = {
	1371,
	1292,
	1313,
	1373,
	1302,
	1329,
	1344,
	1372,
	1374,
	1310,
	1306,
	1346,
	1300,
	1331,
	1321,
	1377,
	1323,
	1364,
	1308,
	1388,
	1336,
	1345,
	1348,
	1354,
	1351,
	1340,
	1352,
	1383,
	1350,
	1369,
	1376,
	1347,
	1365,
	1319,
	1318,
	1317,
	1316,
	1366,
	1368,
	1333,
	1382,
	1295,
	1289,
	1334,
	1358,
	1293,
	1384,
	1332,
	1349,
	1386,
	1390,
	1375,
	1325,
	1378,
	1379,
	1298,
	1296,
	1305,
	1359,
	1367,
	1360,
	1363,
	1357,
	1385,
	1303,
	1291,
	1299,
	1361,
	1381,
	1387,
	1391,
	1309,
	1324,
	1307,
	1338,
	1294,
	1339,
	1312,
	1335,
	1322,
	1380,
	1370,
	1362,
	1297,
	1328,
	1301,
	1337,
	1355,
	1353,
	1315,
	1290,
	1341,
	1304,
	1356,
	1330,
	1343,
	1342,
	1389,
	1311,
	1326,
	1320,
	1327,
	1392,
	1314,
	PMS_WORDID_END
};

#define  PMS_Category_09_MaxNum	(104)

// きもち
static const u16 PMS_CategoryTable_10[] = {
	1412,
	1411,
	1401,
	1433,
	1393,
	1409,
	1396,
	1398,
	1400,
	1431,
	1394,
	1405,
	1439,
	1397,
	1408,
	1416,
	1423,
	1414,
	1417,
	1404,
	1422,
	1420,
	1402,
	1410,
	1406,
	1407,
	1432,
	1429,
	1425,
	1438,
	1430,
	1428,
	1436,
	1403,
	1421,
	1399,
	1427,
	1437,
	1418,
	1434,
	1395,
	1435,
	1424,
	1419,
	1413,
	1415,
	1426,
	PMS_WORDID_END
};

#define  PMS_Category_10_MaxNum	(47)

// なんかいことば
static const u16 PMS_CategoryTable_11[] = {
	1451,
	1452,
	1447,
	1455,
	1458,
	1456,
	1450,
	1449,
	1440,
	1448,
	1465,
	1464,
	1462,
	1442,
	1453,
	1460,
	1441,
	1463,
	1445,
	1459,
	1443,
	1467,
	1469,
	1471,
	1446,
	1461,
	1444,
	1466,
	1454,
	1457,
	1470,
	1468,
	PMS_WORDID_END
};

#define  PMS_Category_11_MaxNum	(32)

// ユニオン
static const u16 PMS_CategoryTable_12[] = {
	1492,
	1483,
	1478,
	1485,
	1491,
	1473,
	1480,
	1484,
	1482,
	1493,
	1477,
	1476,
	1474,
	1475,
	1490,
	1479,
	1481,
	1494,
	1472,
	1488,
	1489,
	1486,
	1487,
	PMS_WORDID_END
};

#define  PMS_Category_12_MaxNum	(23)

//==========================================================
// 文字順単語IDテーブル
//==========================================================

// A
static const u16 PMS_InitialTable_0[] = {
	1189,
	 460,
	  63,
	 359,
	 567,
	1112,
	 547,
	 647,
	 863,
	1073,
	1412,
	1152,
	1371,
	 828,
	 673,
	 142,
	1088,
	 306,
	 593,
	1212,
	1190,
	 190,
	 810,
	1058,
	 899,
	1258,
	  65,
	1411,
	1173,
	 334,
	 424,
	 629,
	 181,
	 742,
	1401,
	1065,
	1271,
	1292,
	1313,
	 347,
	PMS_WORDID_DUP,2, 1089,1433,
	 949,
	 888,
	 897,
	  24,
	  59,
	 493,
	1053,
	 168,
	 788,
	 348,
	 808,
	 304,
	1451,
	 144,
	 770,
	 868,
	 806,
	1114,
	 950,
	 709,
	1156,
	 892,
	 558,
	 915,
	 482,
	 184,
	 298,
	PMS_WORDID_END
};

// B
static const u16 PMS_InitialTable_1[] = {
	1181,
	 371,
	1373,
	 343,
	 354,
	 339,
	 636,
	 608,
	 411,
	1302,
	 722,
	1131,
	 986,
	1492,
	 153,
	 747,
	 267,
	1393,
	  15,
	 374,
	 182,
	  69,
	 683,
	 400,
	1329,
	 613,
	 399,
	 516,
	1344,
	 540,
	 803,
	   9,
	1048,
	 795,
	 257,
	 242,
	 555,
	 831,
	1244,
	1372,
	 530,
	 621,
	1452,
	 694,
	 651,
	1184,
	 438,
	1286,
	1214,
	1374,
	1409,
	 836,
	1151,
	 909,
	 286,
	 776,
	 858,
	 437,
	 436,
	1153,
	 641,
	 557,
	 406,
	 970,
	 946,
	 901,
	 418,
	   1,
	 835,
	 914,
	 827,
	 427,
	 412,
	  12,
	1270,
	1255,
	PMS_WORDID_END
};

// C
static const u16 PMS_InitialTable_2[] = {
	 331,
	 332,
	1447,
	 843,
	1310,
	 323,
	 789,
	 941,
	1306,
	 455,
	 318,
	 268,
	 351,
	  10,
	 251,
	1125,
	1346,
	 113,
	 764,
	 947,
	   6,
	 700,
	   4,
	   5,
	1483,
	 441,
	 944,
	1246,
	 421,
	 420,
	 152,
	 390,
	 358,
	 170,
	 433,
	1300,
	1016,
	1185,
	 624,
	 366,
	1331,
	 344,
	1011,
	  36,
	  35,
	 173,
	1396,
	 866,
	 995,
	  91,
	1321,
	 998,
	1478,
	 415,
	 256,
	1113,
	 500,
	1377,
	1323,
	 996,
	1364,
	1455,
	 605,
	 589,
	1485,
	 628,
	1491,
	1458,
	1308,
	 656,
	 672,
	1398,
	 879,
	1456,
	 341,
	 222,
	 818,
	 674,
	 564,
	1116,
	 839,
	 648,
	 346,
	 408,
	 342,
	1388,
	 488,
	1210,
	 453,
	 169,
	 159,
	 734,
	 936,
	1450,
	 738,
	 802,
	 958,
	1449,
	 104,
	 670,
	 511,
	1038,
	1208,
	1400,
	 155,
	PMS_WORDID_END
};

// D
static const u16 PMS_InitialTable_3[] = {
	1336,
	 988,
	1345,
	1431,
	 981,
	 895,
	 491,
	1348,
	 951,
	 607,
	 928,
	 301,
	 225,
	1394,
	 386,
	1405,
	1354,
	1351,
	 690,
	 693,
	  87,
	 483,
	1340,
	1439,
	 587,
	1352,
	  50,
	 546,
	1397,
	 931,
	1408,
	 132,
	 787,
	 642,
	  85,
	  84,
	 232,
	 849,
	1473,
	 954,
	 520,
	 600,
	 534,
	 499,
	1070,
	 930,
	 980,
	 833,
	 845,
	 902,
	 578,
	 903,
	 148,
	 721,
	 149,
	 905,
	 452,
	 147,
	1480,
	1383,
	 634,
	 426,
	 425,
	 561,
	 984,
	1416,
	1052,
	  96,
	1069,
	  51,
	 206,
	 356,
	 477,
	 355,
	 269,
	 719,
	PMS_WORDID_END
};

// E
static const u16 PMS_InitialTable_4[] = {
	1030,
	 910,
	1440,
	 585,
	1139,
	1141,
	1448,
	1224,
	 133,
	1009,
	 617,
	1213,
	  23,
	 125,
	 466,
	 977,
	 309,
	 101,
	 239,
	 869,
	 548,
	 395,
	 723,
	 779,
	 699,
	1423,
	 908,
	1414,
	 244,
	 780,
	 196,
	1350,
	1177,
	1417,
	1241,
	 102,
	 103,
	 649,
	 295,
	 822,
	 741,
	PMS_WORDID_END
};

// F
static const u16 PMS_InitialTable_5[] = {
	 759,
	 681,
	 748,
	 809,
	 702,
	1162,
	  83,
	1369,
	1150,
	  22,
	 793,
	 349,
	 860,
	 160,
	1376,
	1132,
	 965,
	1123,
	1093,
	 456,
	 974,
	 622,
	 920,
	 503,
	 579,
	1347,
	 586,
	 180,
	 671,
	1465,
	1031,
	 668,
	 549,
	 890,
	 136,
	 644,
	 926,
	1000,
	 756,
	 870,
	 419,
	1104,
	1365,
	 515,
	 330,
	 966,
	 907,
	 612,
	 760,
	1128,
	 762,
	 891,
	1041,
	 689,
	1090,
	1231,
	 205,
	1464,
	 834,
	1172,
	1484,
	1101,
	 478,
	 714,
	 162,
	 527,
	 706,
	 650,
	 744,
	PMS_WORDID_END
};

// G
static const u16 PMS_InitialTable_6[] = {
	 444,
	1161,
	 475,
	1319,
	 445,
	 282,
	  92,
	 876,
	 423,
	  94,
	1129,
	  74,
	 971,
	 443,
	 698,
	 912,
	1226,
	 203,
	 487,
	1160,
	1227,
	 471,
	 362,
	 431,
	 633,
	 207,
	 472,
	  44,
	1064,
	1462,
	1245,
	  42,
	 118,
	1442,
	  55,
	  76,
	1453,
	1234,
	 368,
	1482,
	1318,
	 210,
	1148,
	1155,
	 976,
	 943,
	 816,
	  75,
	 852,
	1220,
	  88,
	 388,
	 383,
	 968,
	1317,
	 253,
	 541,
	  58,
	 570,
	 784,
	 326,
	1493,
	 881,
	 508,
	 316,
	 937,
	 512,
	1044,
	1228,
	 130,
	 856,
	PMS_WORDID_END
};

// H
static const u16 PMS_InitialTable_7[] = {
	1316,
	1257,
	 754,
	1186,
	 855,
	1404,
	 440,
	1422,
	 602,
	 297,
	1420,
	  93,
	 610,
	1265,
	 953,
	 525,
	 711,
	 873,
	 952,
	 857,
	1402,
	 887,
	 753,
	1067,
	 485,
	1219,
	1266,
	1215,
	1183,
	1274,
	 766,
	1163,
	 214,
	1196,
	1198,
	1366,
	1368,
	1216,
	1233,
	1247,
	1252,
	 632,
	1275,
	 733,
	1164,
	 449,
	 450,
	 107,
	 106,
	 237,
	1259,
	1203,
	 250,
	1333,
	1267,
	1187,
	1382,
	1295,
	 430,
	1100,
	 163,
	 187,
	 526,
	 528,
	 116,
	 229,
	 228,
	 832,
	1460,
	1019,
	1249,
	1263,
	 367,
	1037,
	1075,
	 804,
	 552,
	 559,
	1034,
	 654,
	 800,
	  97,
	 591,
	PMS_WORDID_END
};

// I
static const u16 PMS_InitialTable_8[] = {
	1180,
	1232,
	1236,
	 979,
	 797,
	 554,
	1097,
	 919,
	 504,
	 916,
	 829,
	 692,
	1289,
	 174,
	1017,
	 314,
	 999,
	1441,
	1410,
	 782,
	1406,
	 392,
	1334,
	 771,
	1021,
	 997,
	1004,
	1138,
	 830,
	1071,
	 938,
	 727,
	1463,
	1358,
	   2,
	PMS_WORDID_END
};

// J
static const u16 PMS_InitialTable_9[] = {
	  39,
	 385,
	1293,
	 135,
	 522,
	 189,
	 124,
	PMS_WORDID_END
};

// K
static const u16 PMS_InitialTable_10[] = {
	 140,
	 141,
	  64,
	  14,
	 115,
	 498,
	 352,
	1033,
	1167,
	1384,
	 630,
	 230,
	  99,
	 281,
	1085,
	 778,
	 109,
	1182,
	  98,
	 401,
	 402,
	 382,
	PMS_WORDID_END
};

// L
static const u16 PMS_InitialTable_11[] = {
	 305,
	1282,
	 171,
	 131,
	 246,
	 883,
	 380,
	 381,
	 932,
	 844,
	1084,
	 933,
	 470,
	 166,
	 165,
	 637,
	 569,
	 539,
	1130,
	1332,
	1202,
	1197,
	1349,
	1477,
	1476,
	1008,
	 618,
	 463,
	 108,
	1386,
	 609,
	1013,
	1407,
	 345,
	 989,
	 264,
	1046,
	 695,
	1261,
	 271,
	1390,
	 428,
	1136,
	 270,
	 294,
	 638,
	1432,
	 563,
	 448,
	 877,
	 272,
	 249,
	 457,
	 957,
	 337,
	 791,
	 370,
	 404,
	 405,
	PMS_WORDID_END
};

// M
static const u16 PMS_InitialTable_12[] = {
	 679,
	  68,
	1375,
	  67,
	  66,
	1325,
	 240,
	 219,
	 773,
	1080,
	 841,
	 129,
	1022,
	 959,
	 126,
	 467,
	  81,
	 939,
	1024,
	 889,
	  82,
	 462,
	 718,
	1378,
	 296,
	 473,
	 490,
	 310,
	  56,
	 226,
	 458,
	 179,
	 183,
	 105,
	 259,
	1045,
	 284,
	1119,
	1106,
	 303,
	1159,
	 878,
	 708,
	 308,
	 592,
	 307,
	1256,
	 568,
	 521,
	 501,
	 720,
	 154,
	 758,
	  52,
	 481,
	1379,
	1429,
	 376,
	 864,
	 728,
	 815,
	 375,
	  11,
	 805,
	 614,
	 151,
	 150,
	 262,
	 704,
	 350,
	 241,
	 439,
	 598,
	 666,
	 603,
	 312,
	1040,
	 853,
	 739,
	 615,
	 925,
	 200,
	 429,
	 550,
	 792,
	1474,
	1273,
	1086,
	 146,
	1298,
	1445,
	 391,
	 732,
	 730,
	1147,
	 414,
	1060,
	1142,
	1296,
	1168,
	 122,
	1169,
	 922,
	 837,
	 796,
	 685,
	 826,
	 258,
	1272,
	1260,
	  89,
	1475,
	 446,
	 198,
	1305,
	1170,
	PMS_WORDID_END
};

// N
static const u16 PMS_InitialTable_13[] = {
	1359,
	1367,
	 913,
	 177,
	1012,
	 859,
	 763,
	 798,
	1425,
	1459,
	1360,
	1438,
	  34,
	  31,
	  29,
	  32,
	  30,
	  33,
	 597,
	 896,
	 667,
	 290,
	  38,
	 291,
	1250,
	1081,
	1110,
	1193,
	PMS_WORDID_DUP,2, 1276,1430,
	1107,
	 164,
	1194,
	 964,
	1078,
	 299,
	 322,
	 274,
	PMS_WORDID_END
};

// O
static const u16 PMS_InitialTable_14[] = {
	 994,
	 686,
	 224,
	  43,
	 812,
	1223,
	1188,
	1218,
	1269,
	1217,
	1211,
	1242,
	1158,
	 138,
	 139,
	 962,
	1443,
	  95,
	1221,
	1144,
	 696,
	1047,
	 811,
	1002,
	PMS_WORDID_END
};

// P
static const u16 PMS_InitialTable_15[] = {
	 417,
	 716,
	 484,
	  46,
	  47,
	1238,
	1157,
	1137,
	1363,
	 502,
	 867,
	 560,
	 279,
	 691,
	  53,
	1174,
	 576,
	1467,
	 231,
	 489,
	1357,
	 172,
	1035,
	  18,
	  17,
	  16,
	  25,
	 221,
	 538,
	 204,
	 127,
	 393,
	1385,
	1303,
	1291,
	 861,
	1039,
	 311,
	1299,
	1490,
	1134,
	 967,
	 801,
	 635,
	1072,
	 894,
	1020,
	 536,
	 838,
	 573,
	1479,
	 186,
	  60,
	  61,
	  62,
	1469,
	  77,
	 261,
	1361,
	 137,
	 474,
	 233,
	 497,
	 677,
	1124,
	 904,
	 880,
	 875,
	 934,
	1108,
	 713,
	1028,
	  57,
	 394,
	 476,
	1381,
	 678,
	 556,
	 740,
	PMS_WORDID_DUP,2, 590,978,
	 850,
	 923,
	 871,
	  54,
	 645,
	 882,
	 247,
	1056,
	 724,
	 432,
	PMS_WORDID_END
};

// Q
static const u16 PMS_InitialTable_16[] = {
	 195,
	 594,
	1077,
	 156,
	 211,
	PMS_WORDID_END
};

// R
static const u16 PMS_InitialTable_17[] = {
	1387,
	 595,
	  26,
	 243,
	 736,
	1026,
	 280,
	 409,
	 725,
	  78,
	1428,
	  20,
	  19,
	 384,
	 571,
	 509,
	1102,
	1436,
	1481,
	 601,
	 774,
	 611,
	 783,
	1281,
	 378,
	 486,
	 377,
	 379,
	1403,
	 369,
	1471,
	 223,
	1391,
	1446,
	 652,
	 712,
	 775,
	 675,
	1133,
	 112,
	 111,
	 464,
	 447,
	1178,
	1061,
	 542,
	 955,
	 969,
	 846,
	 927,
	1051,
	 893,
	 653,
	 745,
	 584,
	 813,
	 935,
	1421,
	 768,
	 523,
	 701,
	 851,
	 315,
	 407,
	 479,
	1006,
	1032,
	PMS_WORDID_END
};

// S
static const u16 PMS_InitialTable_18[] = {
	 302,
	 717,
	1399,
	 715,
	 373,
	1027,
	 824,
	 990,
	 524,
	  27,
	  28,
	 697,
	1427,
	 680,
	 254,
	1309,
	 212,
	1095,
	 506,
	 599,
	 123,
	 117,
	 119,
	 364,
	1494,
	 786,
	1240,
	 898,
	 273,
	  86,
	 565,
	 616,
	1121,
	 161,
	1014,
	1135,
	1324,
	 336,
	 743,
	 917,
	 963,
	 821,
	 921,
	1005,
	 319,
	 655,
	 492,
	1043,
	 292,
	 825,
	 372,
	1057,
	  90,
	 422,
	1001,
	 410,
	 275,
	 403,
	 847,
	1307,
	 285,
	 213,
	 353,
	1166,
	1251,
	 820,
	 266,
	 814,
	PMS_WORDID_DUP,2, 1068,1437,
	 543,
	1472,
	1154,
	 227,
	 662,
	1074,
	 781,
	1418,
	 188,
	 300,
	 451,
	 626,
	 435,
	 639,
	 823,
	 799,
	 289,
	 287,
	 517,
	 659,
	 575,
	 710,
	1094,
	  80,
	 199,
	  79,
	 620,
	 684,
	 218,
	 235,
	 761,
	1434,
	 619,
	 604,
	 238,
	 785,
	 215,
	1207,
	1079,
	 669,
	 143,
	1262,
	 361,
	 459,
	1063,
	1099,
	 209,
	1239,
	 631,
	1338,
	1076,
	 572,
	1098,
	 338,
	1294,
	1339,
	 545,
	1230,
	1025,
	 956,
	 705,
	  21,
	1312,
	 985,
	 363,
	 665,
	 627,
	 687,
	 167,
	 327,
	1111,
	 442,
	 751,
	 676,
	 646,
	 325,
	 643,
	1335,
	1461,
	   7,
	1082,
	 234,
	 398,
	 397,
	1444,
	 396,
	 121,
	 120,
	 991,
	1062,
	 942,
	 972,
	 707,
	 208,
	 983,
	1042,
	1466,
	 750,
	 519,
	 940,
	1322,
	1096,
	1380,
	1395,
	1118,
	1454,
	 566,
	 577,
	1126,
	 661,
	1370,
	1362,
	 574,
	 434,
	 987,
	 562,
	 660,
	1435,
	 885,
	1003,
	 185,
	 245,
	 192,
	 191,
	 737,
	 658,
	1087,
	 772,
	 544,
	 553,
	1424,
	1115,
	 283,
	 333,
	 703,
	 752,
	 317,
	 260,
	1050,
	 682,
	 726,
	1297,
	 277,
	 625,
	1015,
	 220,
	 911,
	 510,
	1010,
	 731,
	1328,
	PMS_WORDID_END
};

// T
static const u16 PMS_InitialTable_19[] = {
	 529,
	 790,
	 535,
	 276,
	 862,
	 532,
	1127,
	1117,
	1301,
	 114,
	1059,
	 465,
	 765,
	 128,
	1337,
	1419,
	1083,
	 216,
	 794,
	 596,
	1355,
	  72,
	  73,
	1353,
	1235,
	1192,
	1268,
	1029,
	 664,
	 533,
	 583,
	 918,
	 582,
	 581,
	 505,
	 580,
	 817,
	1092,
	1315,
	 468,
	 175,
	 176,
	1290,
	 255,
	 324,
	 755,
	1049,
	 389,
	 158,
	1413,
	1341,
	 588,
	 886,
	 454,
	1304,
	1018,
	1356,
	1143,
	1330,
	 640,
	 328,
	1343,
	1342,
	 252,
	 657,
	 767,
	 929,
	 663,
	 357,
	1036,
	 872,
	 387,
	1243,
	 537,
	 735,
	1457,
	 157,
	 248,
	 236,
	PMS_WORDID_END
};

// U
static const u16 PMS_InitialTable_20[] = {
	 865,
	1470,
	1229,
	 197,
	1091,
	1209,
	1066,
	1149,
	1488,
	1489,
	 201,
	 749,
	1201,
	 217,
	1415,
	 480,
	PMS_WORDID_END
};

// V
static const u16 PMS_InitialTable_21[] = {
	1389,
	 906,
	 134,
	1468,
	  49,
	  48,
	   3,
	1122,
	 416,
	 329,
	 507,
	1120,
	  71,
	1311,
	 288,
	  45,
	 518,
	1054,
	 729,
	1486,
	 313,
	 992,
	 840,
	 100,
	  37,
	PMS_WORDID_END
};

// W
static const u16 PMS_InitialTable_22[] = {
	1287,
	1284,
	 320,
	 321,
	 854,
	1326,
	 365,
	1426,
	   8,
	 975,
	 993,
	 551,
	 848,
	 842,
	 819,
	1023,
	 623,
	1140,
	 807,
	 461,
	  13,
	1237,
	  70,
	 110,
	1279,
	1222,
	1248,
	 746,
	 514,
	 340,
	 293,
	1055,
	1171,
	1204,
	1487,
	  40,
	 757,
	 513,
	 278,
	1109,
	 769,
	 606,
	 202,
	1007,
	 948,
	 194,
	1320,
	1327,
	1392,
	 413,
	 884,
	1206,
	 531,
	 874,
	1205,
	 265,
	 360,
	PMS_WORDID_END
};

// X
static const u16 PMS_InitialTable_23[] = {
	 900,
	 178,
	PMS_WORDID_END
};

// Y
static const u16 PMS_InitialTable_24[] = {
	1225,
	1277,
	 193,
	 469,
	 777,
	1283,
	1199,
	1254,
	1253,
	1195,
	1314,
	1278,
	1146,
	PMS_WORDID_END
};

// Z
static const u16 PMS_InitialTable_25[] = {
	 335,
	 688,
	 145,
	 924,
	 263,
	  41,
	PMS_WORDID_END
};

// その他
static const u16 PMS_InitialTable_26[] = {
	1288,
	PMS_WORDID_END
};

// 文字順テーブルの先頭アドレスをテーブル化しておく
static const u16* const PMS_InitialTable[] = {
	PMS_InitialTable_0,
	PMS_InitialTable_1,
	PMS_InitialTable_2,
	PMS_InitialTable_3,
	PMS_InitialTable_4,
	PMS_InitialTable_5,
	PMS_InitialTable_6,
	PMS_InitialTable_7,
	PMS_InitialTable_8,
	PMS_InitialTable_9,
	PMS_InitialTable_10,
	PMS_InitialTable_11,
	PMS_InitialTable_12,
	PMS_InitialTable_13,
	PMS_InitialTable_14,
	PMS_InitialTable_15,
	PMS_InitialTable_16,
	PMS_InitialTable_17,
	PMS_InitialTable_18,
	PMS_InitialTable_19,
	PMS_InitialTable_20,
	PMS_InitialTable_21,
	PMS_InitialTable_22,
	PMS_InitialTable_23,
	PMS_InitialTable_24,
	PMS_InitialTable_25,
	PMS_InitialTable_26,
};

#undef __PMS_INPUT_RES__
#endif  // __PMS_INPUT_RES__
